openapi: "3.0.0"
info:
  title: Link Share
  version: 1.0.0
  license:
    name: MIT
servers:
  - url: http://127.0.0.1:3000
paths:
  /ping:
    get:
      summary: Health check
      operationId: ping
      responses:
        '200':
          description: Pong response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                status_message: success
                data: pong
        '500':
          $ref: "#/components/responses/ErrorInternalServerError"
        '404':
          $ref: "#/components/responses/ErrorNotFound"
        '400':
          $ref: "#/components/responses/ErrorBadRequest"
  /auth/register:
    post:
      summary: Register new User
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                status_message: success
        '500':
          $ref: "#/components/responses/ErrorInternalServerError"
        '404':
          $ref: "#/components/responses/ErrorNotFound"
        '400':
          $ref: "#/components/responses/ErrorBadRequest"
  /auth/login:
    post:
      summary: User Login
      description: Authenticates a user and returns access and refresh tokens
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
            example:
              username: "user1"
              email: "user1@mail.com"
              password: "password1"
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                status_message: success
                data:
                  access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '500':
          $ref: "#/components/responses/ErrorInternalServerError"
        '404':
          $ref: "#/components/responses/ErrorNotFound"
        '400':
          $ref: "#/components/responses/ErrorBadRequest"
  /auth/refresh-token:
    post:
      summary: Refresh Access Token
      description: Generates a new access token using a valid refresh token
      operationId: refreshToken
      responses:
        '200':
          description: Successful token refresh
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                status_message: success
                data:
                  access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '500':
          $ref: "#/components/responses/ErrorInternalServerError"
        '404':
          $ref: "#/components/responses/ErrorNotFound"
        '400':
          $ref: "#/components/responses/ErrorBadRequest"

components:
  schemas:
    BaseResponse:
      type: object
      properties:
        status_message:
          type: string
          example: success
        data:
          description: Dynamic payload
          x-go-type: interface{}
        total_data:
          type: integer
        url:
          type: string
        error:
          $ref: "#/components/schemas/ErrorLog"
      required:
        - status_message
        - data
        - total_data
        - url
    ErrorLog:
      type: object
      properties:
        message:
          description: User-facing error message
          type: string
        system_message:
          description: Internal or system-level error details
          type: string
        line:
          type: string
          description: Line where the error occurred
        filename:
          type: string
          description: Filename where the error occurred
        function:
          type: string
          description: Function name where the error occurred
      required:
        - message
        - system_message
        - line
        - filename
        - function
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - username
        - email
        - password
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - password
    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
      required:
        - access_token
        - refresh_token
  responses:
    ErrorInternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
          example:
            status_message: error
            error:
              message: Internal server error
              system_message: something went wrong, try again later
              line: "123"
              filename: "file.go"
              function: "SomeFunction"
    ErrorNotFound:
      description: Error data not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
          example:
            status_message: error
            error:
              message: data with id 1 not found
              system_message: data not found
    ErrorBadRequest:
      description: Error bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseResponse"
          example:
            status_message: error
            error:
              message: field cannot be empty
              system_message: there something wrong with your request, please check your request
