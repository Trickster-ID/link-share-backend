services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: FNL8qs3HuldRRl9P6YINySzQHp1EfxJr
      POSTGRES_DB: link_share
    ports:
      - "5432:5432"
    volumes:
      - ./misc/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U link_share"]
      interval: 2s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7.4-alpine
    container_name: redis
    command: ["redis-server", "--requirepass", "AznRnqks3S1Ne5ZKZBrnLhFVLoqQMCOG"]
    environment:
      REDIS_PASSWORD: AznRnqks3S1Ne5ZKZBrnLhFVLoqQMCOG
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "AznRnqks3S1Ne5ZKZBrnLhFVLoqQMCOG", "ping"]
      interval: 2s
      timeout: 5s
      retries: 10

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: FsyyxSX6exPHVwpQwhtraLyJbYhIfVEB
    ports:
      - "27017:27017"
    volumes:
      # - mongo_data:/data/db
      - ./misc/init-mongo.js:/docker-entrypoint-initdb.d/init.js
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 2s
      timeout: 5s
      retries: 10